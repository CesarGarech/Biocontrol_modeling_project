import streamlit as st

def home_page():
    st.title("Modelado de Bioprocesos")

    col1, col2, col3 = st.columns(3)
    with col1:
        st.image("images/Batch.png", caption="### Reactor Batch", use_container_width=True)
    with col2:
        st.image("images/fed_batch.png", caption="### Reactor Fed-Batch", use_container_width=True)
    with col3:
        st.image("images/continous.png", caption="### Reactor Continuo", use_container_width=True)

    st.markdown("""
        ## Fundamento Te√≥rico
        El modelado de bioprocesos permite describir matem√°ticamente la evoluci√≥n de las variables de inter√©s en un biorreactor. A continuaci√≥n se presentan las ecuaciones diferenciales generales para los tres modos de operaci√≥n considerados:

        ### üîπ Modo Lote
        - No hay entrada ni salida de materia durante el proceso.

        dX/dt = Œº(S, O2, P) * X - Kd * X
        dS/dt = - (1/Yxs) * Œº(S, O2, P) * X - ms * X
        dP/dt = Ypx * Œº(S, O2, P) * X
        dO2/dt = Kla * (Cs - O2) - (1/Yxo) * Œº(S, O2, P) * X - mo * X

        Donde:
        - Œº: velocidad espec√≠fica de crecimiento (Monod y variantes)
        - Yxs: rendimiento biomasa/sustrato
        - Ypx: rendimiento producto/biomasa
        - Yxo: rendimiento biomasa/ox√≠geno
        - Kla: coeficiente de transferencia de ox√≠geno
        - ms, mo: coeficientes de mantenimiento
        - Kd: tasa de decaimiento celular

        Las variantes de Œº (velocidad espec√≠fica de crecimiento) consideradas en este c√≥digo son:

        1.  **Monod simple:** Œº = Œºmax * S / (Ks + S)
        2.  **Monod sigmoidal:** Œº = Œºmax * S^n / (Ks^n + S^n)
        3.  **Monod con restricciones:** Œº = Œºmax * S / (Ks + S) * O2 / (KO + O2) * KP / (KP + P)

        ### üîπ Modo Lote Alimentado
        - Se agrega alimentaci√≥n al biorreactor sin retirar producto, y el volumen var√≠a en el tiempo.

        dX/dt = Œº(S, O2, P) * X - Kd * X - (F/V) * X
        dS/dt = - (1/Yxs) * Œº(S, O2, P) * X - ms * X + (F/V) * (Sin - S)
        dP/dt = Ypx * Œº(S, O2, P) * X - (F/V) * P
        dO2/dt = Kla * (Cs - O2) - (1/Yxo) * Œº(S, O2, P) * X - mo * X - (F/V) * O2

        Donde:
        - F: flujo de alimentaci√≥n
        - Sin: concentraci√≥n de sustrato en el alimentado

        ### üîπ Modo Continuo (chemostato)
        - Hay entrada y salida continua de fluido, el volumen se mantiene constante.

        dX/dt = Œº(S, O2, P) * X - Kd * X - D * X
        dS/dt = - (1/Yxs) * Œº(S, O2, P) * X - ms * X + D * (Sin - S)
        dP/dt = Ypx * Œº(S, O2, P) * X - D * P
        dO2/dt = Kla * (Cs - O2) - (1/Yxo) * Œº(S, O2, P) * X - mo * X - D * O2

        Donde:
        - D: tasa de diluci√≥n (D = F/V)

        ---

        ### üîπ An√°lisis de Sensibilidad
        El an√°lisis de sensibilidad es una t√©cnica utilizada para evaluar c√≥mo la incertidumbre en las entradas de un modelo matem√°tico o sistema afecta su salida. En el contexto de los bioprocesos, permite identificar qu√© par√°metros del modelo tienen el mayor impacto en las variables del proceso, lo que es crucial para la optimizaci√≥n y control del sistema.

        ### üîπ Ajuste de Par√°metros
        El ajuste de par√°metros, o estimaci√≥n de par√°metros, es el proceso de encontrar los valores de los par√°metros de un modelo que mejor se ajustan a un conjunto de datos experimentales. Esto se logra minimizando una funci√≥n objetivo que cuantifica la discrepancia entre las predicciones del modelo y las mediciones reales.
        Siendo el vector de par√°metros a estimar,
        y la funci√≥n objetivo a minimizar, el problema general se define como:

        argmin (\\theta) J(\\theta)

        donde J es la funci√≥n objetivo (e.g., suma de errores cuadrados). M√©todos de optimizaci√≥n como el algoritmo de Levenberg-Marquardt o algoritmos gen√©ticos se utilizan com√∫nmente para este prop√≥sito.

        ### üîπ Filtro de Kalman Extendido (EKF)
        El Filtro de Kalman Extendido (EKF) es una versi√≥n del filtro de Kalman que se usa para estimar el estado de sistemas no lineales.
        Dado un sistema no lineal:

        x(k+1) = f(x(k), u(k), w(k))
        z(k) = h(x(k), v(k))

        Donde:
        - x(k): estado del sistema en el instante k.
        - u(k): entrada de control en el instante k.
        - z(k): medici√≥n del sistema en el instante k.
        - w(k) y v(k): ruido del proceso y ruido de medici√≥n, respectivamente.

        Las ecuaciones del EKF son:

        Predicci√≥n del estado: xÃÇ(k+1|k) = f(xÃÇ(k|k), u(k), 0)
        Predicci√≥n de la covarianza del error: P(k+1|k) = F(k)P(k|k)F(k)T + Q
        Ganancia de Kalman: K(k+1) = P(k+1|k)H(k+1)T [H(k+1)P(k+1|k)H(k+1)T + R]^-1
        Actualizaci√≥n del estado: xÃÇ(k+1|k+1) = xÃÇ(k+1|k) + K(k+1)[z(k+1) - h(xÃÇ(k+1|k), 0)]
        Actualizaci√≥n de la covarianza del error: P(k+1|k+1) = [I - K(k+1)H(k+1)]P(k+1|k)

        Donde:
        - F(k) y H(k) son las matrices Jacobianas de f y h, respectivamente, evaluadas en las estimaciones anteriores.
        - Q y R son las matrices de covarianza del ruido del proceso y del ruido de medici√≥n, respectivamente.

        ### üîπ Control RTO (Real-Time Optimization)
        El Control de Optimizaci√≥n en Tiempo Real (RTO) es una estrategia de control avanzada que optimiza el desempe√±o de un proceso en tiempo real. En bioprocesos, se utiliza para ajustar las variables de operaci√≥n para maximizar la producci√≥n o minimizar los costos.
        El problema de optimizaci√≥n se formula como:

        max (u) J(x, u)
        sujeto a:
        xÃá = f(x, u, p)
        g(x, u) ‚â§ 0

        Donde:
        - J: Funci√≥n objetivo a maximizar o minimizar.
        - x: Vector de estados del proceso.
        - u: Vector de variables manipuladas.
        - p: Vector de par√°metros.
        - xÃá = f(x, u, p): Modelo din√°mico del proceso (ecuaciones diferenciales).
        - g(x, u) ‚â§ 0: Restricciones del proceso.

        Los modelos de colocaci√≥n son usados para la optimizaci√≥n.

        ### üîπ Control NMPC (Nonlinear Model Predictive Control)
        El Control Predictivo No Lineal (NMPC) es una t√©cnica de control avanzada que utiliza un modelo din√°mico del proceso para predecir su comportamiento futuro y optimizar las acciones de control en un horizonte de tiempo.
        La formulaci√≥n general del problema NMPC es similar al RTO, pero se resuelve repetidamente en cada paso de tiempo:

        min (U) J(X, U, x(k), SP)
        sujeto a:
        XÃá = F(X, U, P)
        G(X, U) ‚â§ 0
        U ‚àà U

        Donde:
        - U: Secuencia de controles predichos [u(k), u(k+1), ..., u(k+N-1)].
        - X: Trayectoria de estados predicha.
        - x(k): Estado actual del proceso.
        - SP: Setpoint (valor deseado de la salida).
        - F: Modelo din√°mico del proceso.
        - G: Restricciones.
        - U: Conjunto de restricciones en las entradas de control.

        En cada paso de tiempo k, el NMPC resuelve este problema, aplica el primer control u(k), y repite el proceso en el siguiente paso.
        """)

if __name__ == "__main__":
    home_page()